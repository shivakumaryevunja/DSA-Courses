1. write a program to print all the pais of the given sum in an array
array:  1, 5, 7, -1, 5
sum : 6
ans:import java.util.Arrays;
    import java.util.HashSet;
    
    public class PairsWithGivenSum {
        public static void main(String[] args){
            int[] arr = {1, 5, 7, -1, 5};
            int n=arr.length;
            Arrays.sort(arr);
            HashSet<Integer> h = new HashSet<>();
            int sum = 6;
            for(int i=0;i<n;i++){
                int a = sum - arr[i];
                if( h.contains(a)){
                    System.out.println(a+" "+arr[i]);
                }else{
                    h.add(arr[i]);
                }
            }
    
        }
    }

2. write a program to remove the duplicate character in the string
ans: import java.util.HashMap;
    import java.util.LinkedHashMap;
    import java.util.Map;
    
    public class duplicate {
    
        public static void main(String[] args) {
            String str = "geekssd";
            
            Map<Character,Integer> h = new LinkedHashMap<>();
            
            int n = str.length();
            for(int i=0;i<n;i++) {
                char ch = str.charAt(i);
                if(!h.containsKey(ch)) {
                    h.put(ch, 1);
                }else{
                    h.remove(h);
                }
            }
            for(Character c: h.keySet()) {
                System.out.print(c);
            }
    
        }
    
    }

3. write a program to get the pairs of the given sum
ans: import java.util.Arrays;
    import java.util.HashSet;
    //Create a HashSet. For each element of the array
    //, get the difference of target sum and the array element.
    //If the difference is present in the HashSet, it means that there
    //are two integers in the array whose sum is equal to the given target sum.
    //Otherwise, push that element to the HashSet and repeat the same
    //for the remaining array elements.
    public class PairsWithGivenSum {
        public static void main(String[] args){
            int[] arr = {1, 5, 7, -1, 5};
            int n=arr.length;
            Arrays.sort(arr);
            HashSet<Integer> h = new HashSet<>();
            int sum = 6;
            for(int i=0;i<n;i++){
                int a = sum - arr[i];
                if( h.contains(a)){
                    System.out.println(a+" "+arr[i]);
                }else{
                    h.add(arr[i]);
                }
            }
    
        }
    }

4. write a program to get the first unique character
ans: import java.util.HashMap;
    public class FindingFirstUniqueCharacter {
        public static void main(String[] args){
            String str = "adcbdace";
            HashMap<Character,Integer> h = new HashMap<>();
    
            int n = str.length();
            for(int i=0;i<n;i++){
                char c = str.charAt(i);
                if(h.containsKey(c) == false){
                    h.put(c,1);
                }else{
                    h.put(c,h.get(c)+1);
                }
            }
    
            for(int i=0;i<n;i++){
                char c = str.charAt(i);
                if(h.get(c) == 1){
                    System.out.println(c+" is the unique charater in this string: "+str);
                    break;
                }
            }
        }
    }

5. write a program to find all the Common Element in All Rows of Matrix
ans:
    import java.util.Map;
    import java.util.HashMap;
    import java.util.Arrays;

    public class Source {
    
        public static void printElementInAllRows(int mat[][],int row,int col) {
            Map<Integer,Integer> mp = new HashMap<>(); 
           // Map<Integer,Integer> mp = new HashMap<Integer>();
           ArrayList<Integer> arr = new ArrayList<>();
            int count = 0;
            for(int i=0;i<col;i++){
                mp.put(mat[0][i],1);
            }
            
            for(int i=1;i<row;i++){
                for(int j=0;j<col;j++){
                    if (mp.get(mat[i][j]) != null && mp.get(mat[i][j]) == i) 
                    { 
                        mp.put(mat[i][j], i + 1); 
                        if (i == row - 1){
                            arr.add(mat[i][j]);
                            System.out.print(mat[i][j] + " ");
                        }
                    } 
                }
            }
            Collections.sort(arr);
            for(int a:arr) {
            	System.out.print(a+" ");
            }
         
        }
    
        public static void main(String[] args) {
            Scanner sc =  new Scanner(System.in);
            int row = 4;
            int col = 5;
            
            int matrix[][] = 
                { 
                        {1, 2, 1, 4, 8}, 
                        {3, 7, 8, 5, 1}, 
                        {8, 7, 7, 3, 1}, 
                        {8, 1, 2, 7, 9}, 
                    };
            
    
            printElementInAllRows(matrix,row,col);
        }
    }
